#  Copyright 2024 Google LLC
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#       http:#www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

APIProxy:
  .revision: 1
  .name: {{ slug_make ($.Values.spec | dig "info" "x-serviceName" $.Values.spec.info.title) }}
  DisplayName: {{ $.Values.spec.info.title }}
  Description: {{ $.Values.spec.info.description }}
Policies:
  $ref: ./policies.yaml#/
ProxyEndpoints:
  - ProxyEndpoint:
      .name: default
      PreFlow:
        .name: PreFlow
        Request:
          - Step:
              Name: SA-rateLimit
          - Step:
              Name: Q-checkQuota
              Condition: (request.verb != "OPTIONS")
          - Step:
              Name: OAS-Validate 
              Condition: (request.verb != "OPTIONS")
 
      Flows:
      #{{- range $path, $pathItem := $.Values.spec.paths }}
        #{{- range $verb, $opItem := $pathItem }}
          #{{- if eq (include "get_visibility" $opItem) "INTERNAL" }}
              #{{- fmt_printf "Skipping internal operation '%s' (%s %s)\n" $opItem.operationId $verb $path }}
              #{{-  continue }}
          #{{-  end  }}
        - Flow:
            .name: {{ $opItem.operationId }}
            Condition: (proxy.pathsuffix MatchesPath "{{  regexReplaceAll "{[^}]*}" $path "*" }}") and (request.verb = "{{ $verb | upper }}")
        #{{- end }}
      #{{- end }}
        - Flow:
            .name: CatchAll
            Request:
              - Step:
                  Name: RF-CatchAll
      PostFlow:
        .name: PostFlow
        Response:
          - Step:
              Name: JS-formatLog
          - Step:
              Name: ML-sendLogsCloudLogging
      HTTPProxyConnection:
        BasePath: {{ include "get_basepath" (index $.Values.spec.servers 0 "url") }}
      RouteRule:
        .name: default
        TargetEndpoint: default
TargetEndpoints:
  - TargetEndpoint:
      .name: default
      HTTPTargetConnection:
        #{{- $scheme := include "get_scheme" (index $.Values.spec.servers 0 "url") }}
        #{{- if eq $scheme "https" }}
        SSLInfo:
          Enabled: true
          Enforce: true
          IgnoreValidationErrors: true
        #{{- end }}
        URL: {{ $.Values.target_server_url }}
Resources:
  - Resource:
      Type: oas
      #{{ os_writefile "./spec.yaml" $.Values.spec_string }}
      #{{ remove_oas_extensions "./spec.yaml" }}
      Path: ./spec.yaml

  - Resource: 
      Type: jsc
      #{{ os_copyfile "./formatLog.js" "./resources/formatLog.js" }}
      Path: ./formatLog.js
      
      